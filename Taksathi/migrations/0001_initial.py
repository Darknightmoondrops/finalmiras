# Generated by Django 4.0.4 on 2022-05-06 12:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductMainCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=999, verbose_name='Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ProductMainCategoriesImage', verbose_name='Image')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999, verbose_name='Title')),
                ('slug', models.CharField(max_length=999, verbose_name='Slug')),
                ('descriptions', models.CharField(max_length=999, verbose_name='Descriptions')),
                ('image', models.ImageField(upload_to='Products', verbose_name='Image')),
                ('price', models.IntegerField(default=0)),
                ('volume', models.CharField(max_length=999, verbose_name='Volume')),
                ('compounds', models.CharField(max_length=999, verbose_name='Compounds')),
                ('licenseÙ€issuer', models.CharField(max_length=999, verbose_name='License issuer')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('maincategories', models.ManyToManyField(to='Taksathi.productmaincategories', verbose_name='Main Category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductsCarts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Payment Date')),
                ('payment_status', models.BooleanField(default=False, verbose_name='Payment Status')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Shoper')),
            ],
        ),
        migrations.CreateModel(
            name='ProductsSliders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='ProductsSlides', verbose_name='Image')),
                ('url', models.URLField(verbose_name='Url')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSubCategories_2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=999, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Tiket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999, verbose_name='Title')),
                ('status', models.BooleanField(default=False, verbose_name='Status')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('support', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiket_support', to=settings.AUTH_USER_MODEL, verbose_name='Support')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiket_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSubCategories_1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=999, verbose_name='Name')),
                ('sub_categories2', models.ManyToManyField(blank=True, to='Taksathi.productsubcategories_2', verbose_name='Sub Categories 2')),
            ],
        ),
        migrations.CreateModel(
            name='ProductsOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=999, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Price')),
                ('payment_date', models.DateTimeField(auto_now_add=True, verbose_name='Payment Date')),
                ('payment_status', models.BooleanField(default=False, verbose_name='Payment Status')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Taksathi.productscarts', verbose_name='Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Taksathi.products', verbose_name='Product ')),
            ],
        ),
        migrations.CreateModel(
            name='ProductsComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('status', models.BooleanField(default=False, verbose_name='Status')),
                ('date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Taksathi.products', verbose_name='Prodcut Id')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='products',
            name='subCategories1',
            field=models.ManyToManyField(to='Taksathi.productsubcategories_1', verbose_name='Sub Category 1'),
        ),
        migrations.AddField(
            model_name='products',
            name='subCategories2',
            field=models.ManyToManyField(to='Taksathi.productsubcategories_2', verbose_name='Sub Category 2'),
        ),
        migrations.AddField(
            model_name='products',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='USer'),
        ),
        migrations.AddField(
            model_name='productmaincategories',
            name='sub_categories1',
            field=models.ManyToManyField(blank=True, to='Taksathi.productsubcategories_1', verbose_name='Sub Categories 1'),
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('file', models.FileField(blank=True, null=True, upload_to='TiketFile', verbose_name='File')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('support', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message', to=settings.AUTH_USER_MODEL, verbose_name='Support')),
                ('tiket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Taksathi.tiket', verbose_name='Tiket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
